<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>MOOC-Python大数据分析（三）4.1-4.4 时间数据分析（基础篇）</title>
      <link href="2020/11/10/mooc-python-da-shu-ju-fen-xi-san/"/>
      <url>2020/11/10/mooc-python-da-shu-ju-fen-xi-san/</url>
      
        <content type="html"><![CDATA[<h1 id="4-1-时间列的基本索引"><a href="#4-1-时间列的基本索引" class="headerlink" title="4.1 时间列的基本索引"></a>4.1 时间列的基本索引</h1><blockquote><p>这个章节主要介绍时间信息的处理。我们经常可以在日常生活工作中遇到各种与时间信<br>息相关的数据，比如交易记录、访问记录等，这些信息往往按照时间形成一个个时间序列，<br>此时，我们不仅可以通过传统的数据分析方法来对数据进行分析，而且还可以专门从时间变<br>化的角度来分析，比如看看发展趋势、找出可能的周期、预测未来可能的数值等等。这构成<br>了一个较为独立的分析领域。</p></blockquote><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">from</span> pandas <span class="token keyword">import</span> DataFrame<span class="token keyword">from</span> datetime <span class="token keyword">import</span> datetimedata <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>    <span class="token string">'ID'</span><span class="token punctuation">:</span>    <span class="token punctuation">[</span><span class="token string">'000001'</span><span class="token punctuation">,</span> <span class="token string">'000002'</span><span class="token punctuation">,</span> <span class="token string">'000003'</span><span class="token punctuation">,</span> <span class="token string">'000004'</span><span class="token punctuation">,</span> <span class="token string">'000005'</span><span class="token punctuation">,</span> <span class="token string">'000006'</span><span class="token punctuation">,</span> <span class="token string">'000007'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'黎明'</span><span class="token punctuation">,</span> <span class="token string">'赵怡春'</span><span class="token punctuation">,</span> <span class="token string">'张富平'</span><span class="token punctuation">,</span> <span class="token string">'白丽'</span><span class="token punctuation">,</span> <span class="token string">'牛玉德'</span><span class="token punctuation">,</span> <span class="token string">'姚华'</span><span class="token punctuation">,</span> <span class="token string">'李南'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">'gender'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">'birthday'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>        datetime<span class="token punctuation">(</span><span class="token number">2004</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        datetime<span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">27</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        datetime<span class="token punctuation">(</span><span class="token number">2002</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">29</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        datetime<span class="token punctuation">(</span><span class="token number">2002</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">27</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        datetime<span class="token punctuation">(</span><span class="token number">2003</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        datetime<span class="token punctuation">(</span><span class="token number">2002</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        datetime<span class="token punctuation">(</span><span class="token number">2004</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">'age'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">'height'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">1.88</span><span class="token punctuation">,</span> <span class="token number">1.78</span><span class="token punctuation">,</span> <span class="token number">1.81</span><span class="token punctuation">,</span> <span class="token number">1.86</span><span class="token punctuation">,</span> <span class="token number">1.74</span><span class="token punctuation">,</span> <span class="token number">1.75</span><span class="token punctuation">,</span> <span class="token number">1.76</span><span class="token punctuation">]</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>frame <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>data<span class="token punctuation">)</span></code></pre><p>有了这个时间类型的日期，就可以处理时间了。比如读取年份：</p><pre class=" language-python"><code class="language-python">frame<span class="token punctuation">[</span><span class="token string">'birthday'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>dt<span class="token punctuation">.</span>year</code></pre><pre><code>0    20041    20002    20023    20024    20035    20026    2004Name: birthday, dtype: int64</code></pre><p>其实有了这个真正的生日，我们就不该在数据存储年龄，毕竟年龄是会随着时间而改变，<br>而生日，则就可以利用当前年份求的具体的年龄：</p><pre class=" language-python"><code class="language-python">datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>year<span class="token operator">-</span>frame<span class="token punctuation">[</span><span class="token string">'birthday'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>dt<span class="token punctuation">.</span>year</code></pre><pre><code>0    161    202    183    184    175    186    16Name: birthday, dtype: int64</code></pre><p>前面这个 year 只获取当前今天的年份，<br>而后面这个 DataFrame 获取的是所有记录的所有年份，1 个数据怎么可以和这么多数据进行<br>计算呢？其实，这也是 Python 的强大之处，Python 会自动进行扩展，将这个一个当前今天<br>的年份应用于所有所有记录所有年份的计算</p><p>我们也可以转时间转换为各种自定义的格式，以满足特定的用户要求。基本思路就是取<br>出时间信息的各个组成部分，将其转换为字符串，并和其他字符拼凑成最终所需的格式：</p><pre class=" language-python"><code class="language-python">frame<span class="token punctuation">[</span><span class="token string">'birthday'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>dt<span class="token punctuation">.</span>year<span class="token punctuation">.</span>apply<span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'年'</span> <span class="token operator">+</span>frame<span class="token punctuation">[</span><span class="token string">'birthday'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>dt<span class="token punctuation">.</span>month<span class="token punctuation">.</span>apply<span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">'月'</span></code></pre><pre><code>0    2004年10月1    2000年11月2     2002年1月3     2002年8月4     2003年3月5    2002年12月6     2004年4月Name: birthday, dtype: object</code></pre><p>当然，更多的情况是我们所获取的日期数据本身就是字符串，比如从网络数据中读取了<br>文本数据等，因此我们需要将其转换为时间类型才能进行时间类型的处理。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">from</span> pandas <span class="token keyword">import</span> DataFrame<span class="token keyword">from</span> datetime <span class="token keyword">import</span> datetimedata <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>    <span class="token string">'ID'</span><span class="token punctuation">:</span>    <span class="token punctuation">[</span><span class="token string">'000001'</span><span class="token punctuation">,</span> <span class="token string">'000002'</span><span class="token punctuation">,</span> <span class="token string">'000003'</span><span class="token punctuation">,</span> <span class="token string">'000004'</span><span class="token punctuation">,</span> <span class="token string">'000005'</span><span class="token punctuation">,</span> <span class="token string">'000006'</span><span class="token punctuation">,</span> <span class="token string">'000007'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'黎明'</span><span class="token punctuation">,</span> <span class="token string">'赵怡春'</span><span class="token punctuation">,</span> <span class="token string">'张富平'</span><span class="token punctuation">,</span> <span class="token string">'白丽'</span><span class="token punctuation">,</span> <span class="token string">'牛玉德'</span><span class="token punctuation">,</span> <span class="token string">'姚华'</span><span class="token punctuation">,</span> <span class="token string">'李南'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">'gender'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">'birthday'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>        <span class="token string">'2004-10-01'</span><span class="token punctuation">,</span> <span class="token string">'2000-11-27'</span><span class="token punctuation">,</span> <span class="token string">'2002-01-29'</span><span class="token punctuation">,</span> <span class="token string">'2002-08-27'</span><span class="token punctuation">,</span> <span class="token string">'2003-03-14'</span><span class="token punctuation">,</span>        <span class="token string">'2002-12-17'</span><span class="token punctuation">,</span> <span class="token string">'2004-04-12'</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">'height'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">1.88</span><span class="token punctuation">,</span> <span class="token number">1.78</span><span class="token punctuation">,</span> <span class="token number">1.81</span><span class="token punctuation">,</span> <span class="token number">1.86</span><span class="token punctuation">,</span> <span class="token number">1.74</span><span class="token punctuation">,</span> <span class="token number">1.75</span><span class="token punctuation">,</span> <span class="token number">1.76</span><span class="token punctuation">]</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>frame <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>data<span class="token punctuation">)</span></code></pre><pre class=" language-python"><code class="language-python">frame</code></pre><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>ID</th>      <th>name</th>      <th>gender</th>      <th>birthday</th>      <th>height</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>000001</td>      <td>黎明</td>      <td>True</td>      <td>2004-10-01</td>      <td>1.88</td>    </tr>    <tr>      <th>1</th>      <td>000002</td>      <td>赵怡春</td>      <td>False</td>      <td>2000-11-27</td>      <td>1.78</td>    </tr>    <tr>      <th>2</th>      <td>000003</td>      <td>张富平</td>      <td>True</td>      <td>2002-01-29</td>      <td>1.81</td>    </tr>    <tr>      <th>3</th>      <td>000004</td>      <td>白丽</td>      <td>False</td>      <td>2002-08-27</td>      <td>1.86</td>    </tr>    <tr>      <th>4</th>      <td>000005</td>      <td>牛玉德</td>      <td>True</td>      <td>2003-03-14</td>      <td>1.74</td>    </tr>    <tr>      <th>5</th>      <td>000006</td>      <td>姚华</td>      <td>False</td>      <td>2002-12-17</td>      <td>1.75</td>    </tr>    <tr>      <th>6</th>      <td>000007</td>      <td>李南</td>      <td>True</td>      <td>2004-04-12</td>      <td>1.76</td>    </tr>  </tbody></table></div><p>其中我们增加了字符串类型的 birthday 生日列，去除了年龄列。为了计算年龄列，我们<br>首先将生日列转换为时间类型，如：</p><pre class=" language-python"><code class="language-python">pd<span class="token punctuation">.</span>to_datetime<span class="token punctuation">(</span>frame<span class="token punctuation">[</span><span class="token string">'birthday'</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre><pre><code>0   2004-10-011   2000-11-272   2002-01-293   2002-08-274   2003-03-145   2002-12-176   2004-04-12Name: birthday, dtype: datetime64[ns]</code></pre><pre class=" language-python"><code class="language-python">frame<span class="token punctuation">[</span><span class="token string">'age'</span><span class="token punctuation">]</span> <span class="token operator">=</span> datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>year <span class="token operator">-</span> pd<span class="token punctuation">.</span>to_datetime<span class="token punctuation">(</span>frame<span class="token punctuation">[</span><span class="token string">'birthday'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>dt<span class="token punctuation">.</span>year</code></pre><p>这种 to_datetime 函数的功能很强大，即使你写成其他格式的日期，只要是常见的都能<br>自动理解并解析成正确的日期数据。比如这里我们调整了日期格式，将年月日换成了月日年，程序依然运行正常。</p><h3 id="strptime"><a href="#strptime" class="headerlink" title="strptime"></a>strptime</h3><p>不过如果格式确实比较古怪，比如在日期的年份后还专门加了个“年”的汉字，形成一<br>种非标准的格式，此时就会出错。<br>对于此类问题，就需要利用 datetime 类中的 strptime 函数，这个函数可以指定原有字<br>符串中日期的格式，从而实现对特定格式日期的转换。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">from</span> pandas <span class="token keyword">import</span> DataFrame<span class="token keyword">from</span> datetime <span class="token keyword">import</span> datetimedata <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>    <span class="token string">'ID'</span><span class="token punctuation">:</span>    <span class="token punctuation">[</span><span class="token string">'000001'</span><span class="token punctuation">,</span> <span class="token string">'000002'</span><span class="token punctuation">,</span> <span class="token string">'000003'</span><span class="token punctuation">,</span> <span class="token string">'000004'</span><span class="token punctuation">,</span> <span class="token string">'000005'</span><span class="token punctuation">,</span> <span class="token string">'000006'</span><span class="token punctuation">,</span> <span class="token string">'000007'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'黎明'</span><span class="token punctuation">,</span> <span class="token string">'赵怡春'</span><span class="token punctuation">,</span> <span class="token string">'张富平'</span><span class="token punctuation">,</span> <span class="token string">'白丽'</span><span class="token punctuation">,</span> <span class="token string">'牛玉德'</span><span class="token punctuation">,</span> <span class="token string">'姚华'</span><span class="token punctuation">,</span> <span class="token string">'李南'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">'gender'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">'birthday'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>        <span class="token string">'10-01-2004 年'</span><span class="token punctuation">,</span> <span class="token string">'11-27-2000 年'</span><span class="token punctuation">,</span> <span class="token string">'01-29-2002 年'</span><span class="token punctuation">,</span> <span class="token string">'08-27-2002 年'</span><span class="token punctuation">,</span>        <span class="token string">'03-14-2003 年'</span><span class="token punctuation">,</span> <span class="token string">'12-17-2002 年'</span><span class="token punctuation">,</span> <span class="token string">'04-12-2004 年'</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">'height'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">1.88</span><span class="token punctuation">,</span> <span class="token number">1.78</span><span class="token punctuation">,</span> <span class="token number">1.81</span><span class="token punctuation">,</span> <span class="token number">1.86</span><span class="token punctuation">,</span> <span class="token number">1.74</span><span class="token punctuation">,</span> <span class="token number">1.75</span><span class="token punctuation">,</span> <span class="token number">1.76</span><span class="token punctuation">]</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>frame <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>data<span class="token punctuation">)</span></code></pre><pre class=" language-python"><code class="language-python">frame<span class="token punctuation">[</span><span class="token string">'age'</span><span class="token punctuation">]</span> <span class="token operator">=</span> datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>year<span class="token operator">-</span>frame<span class="token punctuation">[</span><span class="token string">'birthday'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>apply<span class="token punctuation">(</span>datetime<span class="token punctuation">.</span>strptime<span class="token punctuation">,</span>args<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'%m-%d-%Y 年'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>dt<span class="token punctuation">.</span>year</code></pre><pre class=" language-python"><code class="language-python">datetime<span class="token punctuation">.</span>strptime<span class="token punctuation">(</span>frame<span class="token punctuation">[</span><span class="token string">'birthday'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>iloc<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">'%m-%d-%Y 年'</span><span class="token punctuation">)</span></code></pre><pre><code>datetime.datetime(2004, 10, 1, 0, 0)</code></pre><h3 id="parse"><a href="#parse" class="headerlink" title="parse"></a>parse</h3><h3 id="strftime"><a href="#strftime" class="headerlink" title="strftime"></a>strftime</h3><p>一旦转换为了时间类型，就可以继续按照时间来处理，甚至格式化处理<br>成自己想显示的格式：</p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 1. 将数据类型转变为datetime类型</span>frame<span class="token punctuation">[</span><span class="token string">'birthday'</span><span class="token punctuation">]</span><span class="token operator">=</span>frame<span class="token punctuation">[</span><span class="token string">'birthday'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>apply<span class="token punctuation">(</span>datetime<span class="token punctuation">.</span>strptime<span class="token punctuation">,</span>args<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'%m-%d-%Y 年'</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 2. 按照所需格式进行转换</span><span class="token keyword">print</span><span class="token punctuation">(</span>pd<span class="token punctuation">.</span>to_datetime<span class="token punctuation">(</span>frame<span class="token punctuation">[</span><span class="token string">'birthday'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>apply<span class="token punctuation">(</span>datetime<span class="token punctuation">.</span>strftime<span class="token punctuation">,</span> args<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'(%m):%d-(%Y)'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><h3 id="汉字信息"><a href="#汉字信息" class="headerlink" title="汉字信息"></a>汉字信息</h3><p>如果转换的格式含有汉字信息，就需要采取可以修改语言类型（locale），方法是导入<br>locale 库：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> localelocale<span class="token punctuation">.</span>setlocale<span class="token punctuation">(</span>locale<span class="token punctuation">.</span>LC_CTYPE<span class="token punctuation">,</span><span class="token string">'chinese'</span><span class="token punctuation">)</span>pd<span class="token punctuation">.</span>to_datetime<span class="token punctuation">(</span>frame<span class="token punctuation">[</span><span class="token string">'birthday'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>apply<span class="token punctuation">(</span>datetime<span class="token punctuation">.</span>strftime<span class="token punctuation">,</span>args<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'(%m 月):%d 日-(%y 年)'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><h3 id="对时间的处理"><a href="#对时间的处理" class="headerlink" title="对时间的处理"></a>对时间的处理</h3><p>比如我们发现现有的学生生日因为时区关系，延迟了一天，<br>需要将每个人的生日完后往前推一天。这个可以使用 timedelta 类型，为此需要首先导入：<code>from datetime import timedelta</code><br>然后就可以定义这种时间差值，并将其累加到现有的时间变量中去</p><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> datetime <span class="token keyword">import</span> timedeltapd<span class="token punctuation">.</span>to_datetime<span class="token punctuation">(</span>frame<span class="token punctuation">[</span><span class="token string">'birthday'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span>timedelta<span class="token punctuation">(</span>days<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span></code></pre><p>最后，我们来看看关于分组的问题，比如我们想看看出生在不同年份的人数各有多少。<br>如果生日是 datetime 时间类型，我们可以直接写为：</p><pre class=" language-python"><code class="language-python">frame<span class="token punctuation">[</span><span class="token string">'ID'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>groupby<span class="token punctuation">(</span>frame<span class="token punctuation">[</span><span class="token string">'birthday'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>dt<span class="token punctuation">.</span>year<span class="token punctuation">)</span><span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><h1 id="4-2-时间索引"><a href="#4-2-时间索引" class="headerlink" title="4.2 时间索引"></a>4.2 时间索引</h1><blockquote><p>在数据分析中，时间信息不仅常常是一种被分析的对象，比如上次我们谈到的学生的生<br>日，更多的可能往往表现在时间信息往往是一种分析的依据，比如我们按照时间统计分析各<br>种流水记录。在这种情况下，我们常常把时间信息作为数据的索引，由此还可以利用很多专<br>门的时间分析途径来对数据进行更多角度的时间分析。</p></blockquote><p>比如我们假设目前的 7 条学生记录是分别在各个时间点上加入到我们的数据中来的，我<br>们可以利用索引来表示：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">from</span> pandas <span class="token keyword">import</span> DataFrame<span class="token keyword">from</span> datetime <span class="token keyword">import</span> datetimedata <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>    <span class="token string">'ID'</span><span class="token punctuation">:</span>    <span class="token punctuation">[</span><span class="token string">'000001'</span><span class="token punctuation">,</span> <span class="token string">'000002'</span><span class="token punctuation">,</span> <span class="token string">'000003'</span><span class="token punctuation">,</span> <span class="token string">'000004'</span><span class="token punctuation">,</span> <span class="token string">'000005'</span><span class="token punctuation">,</span> <span class="token string">'000006'</span><span class="token punctuation">,</span> <span class="token string">'000007'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'黎明'</span><span class="token punctuation">,</span> <span class="token string">'赵怡春'</span><span class="token punctuation">,</span> <span class="token string">'张富平'</span><span class="token punctuation">,</span> <span class="token string">'白丽'</span><span class="token punctuation">,</span> <span class="token string">'牛玉德'</span><span class="token punctuation">,</span> <span class="token string">'姚华'</span><span class="token punctuation">,</span> <span class="token string">'李南'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">'gender'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">'age'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">'height'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">1.88</span><span class="token punctuation">,</span> <span class="token number">1.78</span><span class="token punctuation">,</span> <span class="token number">1.81</span><span class="token punctuation">,</span> <span class="token number">1.86</span><span class="token punctuation">,</span> <span class="token number">1.74</span><span class="token punctuation">,</span> <span class="token number">1.75</span><span class="token punctuation">,</span> <span class="token number">1.76</span><span class="token punctuation">]</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>dates <span class="token operator">=</span> <span class="token punctuation">[</span>    datetime<span class="token punctuation">(</span><span class="token number">2019</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">29</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    datetime<span class="token punctuation">(</span><span class="token number">2019</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    datetime<span class="token punctuation">(</span><span class="token number">2019</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    datetime<span class="token punctuation">(</span><span class="token number">2019</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    datetime<span class="token punctuation">(</span><span class="token number">2020</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    datetime<span class="token punctuation">(</span><span class="token number">2020</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    datetime<span class="token punctuation">(</span><span class="token number">2020</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">]</span>frame <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>data<span class="token punctuation">,</span> index<span class="token operator">=</span>dates<span class="token punctuation">)</span></code></pre><pre class=" language-python"><code class="language-python">frame</code></pre><p><strong>这里要注意几个问题</strong>：</p><ol><li>为了处理时间更为方便些，我们还是使用标准的时间类型来表示时间，而不是字符串，因此需要先导入必要的 datetime。</li><li>我们得到一个时间类型的列表，并将其设定为当前数据的索引。此时我们可能感觉不到，这种时间类型的索引和一般的序号索引有什么区别，其实，采用时间类型的索引具有很多传统一般索引所不具备的特殊功能:<br>一般而言，索引最大的作用就是提供一种选择行的依据，时间类型的索引可以按照适应时间处理的方式来进行数据选择。比如我们选择特定时间的记录，如 2019 年 11 月 29 日的记录：最为完美的就是直接使用时间类型来选择：</li></ol><h2 id="数据选择"><a href="#数据选择" class="headerlink" title="数据选择"></a>数据选择</h2><pre class=" language-python"><code class="language-python">frame<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>datetime<span class="token punctuation">(</span><span class="token number">2019</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">29</span><span class="token punctuation">)</span><span class="token punctuation">]</span></code></pre><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 更方便的做法</span>frame<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token string">'20191129'</span><span class="token punctuation">]</span></code></pre><p>这个写法相对比较灵活，即使写成不同的格式，只要常见和对应原有的表示，就可以使<br>用。<br><code>print(frame.loc[&#39;2019-11-29&#39;])</code><br>甚至还可以利用不同粒度的时间单位来选择，比如我们以月份来选择：<br><code>print(frame.loc[&#39;2019-12&#39;])</code><br>这就表示选择所有 19 年 12 月的全部记录，都没问题。</p><p>也可以进行切片的范围选择，比如我们选择 19 年 12 月到 2020 年 1 月的全部记录：</p><pre class=" language-python"><code class="language-python">frame<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token string">'2019-12'</span><span class="token punctuation">:</span><span class="token string">'2020-1'</span><span class="token punctuation">]</span></code></pre><p>有一个等价的函数也可以实现同样的效果，就是 <code>truncate</code>，它表示剪除，比如选择什么时间段的内容其实等价于剪除其他时间的数据。比如还是刚才这个例子，我们只需剪除 12月之前的记录即可：</p><pre class=" language-python"><code class="language-python">frame<span class="token punctuation">.</span>truncate<span class="token punctuation">(</span>before<span class="token operator">=</span><span class="token string">'2019-12-1'</span><span class="token punctuation">)</span></code></pre><h2 id="数据分组"><a href="#数据分组" class="headerlink" title="数据分组"></a>数据分组</h2><p>一般而言，索引元素都是不一样的，因此对索引分组意义并不大，但是对于时间类型的索引，往往存在着时间相同或者不同时间粒度单位相同的可能性，也具有分组的实际意义。<br>假设存在着相同的时间索引值，我们可以直接对索引进行分组。这里有两种方法都可以：</p><ol><li>在 groupby 参数中指定 level=0 参数数值，即表示对索引分组，不论是什么类型，都可以按照数值是否一样分组：</li></ol><pre class=" language-python"><code class="language-python">frame<span class="token punctuation">[</span><span class="token string">'ID'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>groupby<span class="token punctuation">(</span>level<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><ol start="2"><li>在 groupby 参数中说明按照索引分组，更为直观简单</li></ol><pre class=" language-python"><code class="language-python">frame<span class="token punctuation">[</span><span class="token string">'ID'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>groupby<span class="token punctuation">(</span>frame<span class="token punctuation">.</span>index<span class="token punctuation">)</span><span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 对年份进行分组：</span>frame<span class="token punctuation">[</span><span class="token string">'ID'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>groupby<span class="token punctuation">(</span>frame<span class="token punctuation">.</span>index<span class="token punctuation">.</span>year<span class="token punctuation">)</span><span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 与dt.year不同的原因是时间索引类型不是datetime类型，</span><span class="token comment" spellcheck="true"># 而是pandas转为了Datetimeindex类型</span></code></pre><h1 id="4-3-特殊时间序列的生成"><a href="#4-3-特殊时间序列的生成" class="headerlink" title="4.3 特殊时间序列的生成"></a>4.3 特殊时间序列的生成</h1><blockquote><p>前面所介绍的各种时间序列都是一些比较随机和杂乱的序列，在实际分析中，有时我们<br>需要得到一种非常规律的时间序列，据此实现对特定数据的分析和统计。</p></blockquote><p>比如我们想得到从 2020 年 1 月 1 日开始的 7 天时间，并作为当前学生数据的索引：</p><pre class=" language-python"><code class="language-python">frame<span class="token operator">=</span>pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>data<span class="token punctuation">,</span>pd<span class="token punctuation">.</span>date_range<span class="token punctuation">(</span><span class="token string">'2020-1-1'</span><span class="token punctuation">,</span><span class="token string">'2020-1-7'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>frame</code></pre><p>也可以按照指定数量来生成：</p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 其中的 start 指定起始时间，periods 指定数量。</span>frame<span class="token operator">=</span>pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>data<span class="token punctuation">,</span>pd<span class="token punctuation">.</span>date_range<span class="token punctuation">(</span>start<span class="token operator">=</span><span class="token string">'2020-1-1'</span><span class="token punctuation">,</span>periods<span class="token operator">=</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">)</span>frame</code></pre><p>默认情况下，总是按照天数来计次，如果想按照其他时间单位，可以通过 freq 参数来<br>设定：</p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 默认取每个月的最后一天</span>frame<span class="token operator">=</span>pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>data<span class="token punctuation">,</span>pd<span class="token punctuation">.</span>date_range<span class="token punctuation">(</span>start<span class="token operator">=</span><span class="token string">'2020-1-1'</span><span class="token punctuation">,</span>periods<span class="token operator">=</span><span class="token number">7</span><span class="token punctuation">,</span>freq<span class="token operator">=</span><span class="token string">'M'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>frame </code></pre><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 默认取每个月的第一天</span>frame<span class="token operator">=</span>pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>data<span class="token punctuation">,</span>pd<span class="token punctuation">.</span>date_range<span class="token punctuation">(</span>start<span class="token operator">=</span><span class="token string">'2020-1-1'</span><span class="token punctuation">,</span>periods<span class="token operator">=</span><span class="token number">7</span><span class="token punctuation">,</span>freq<span class="token operator">=</span><span class="token string">'MS'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>frame </code></pre><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 每两个月取一次</span>frame<span class="token operator">=</span>pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>data<span class="token punctuation">,</span>pd<span class="token punctuation">.</span>date_range<span class="token punctuation">(</span>start<span class="token operator">=</span><span class="token string">'2020-1-1'</span><span class="token punctuation">,</span>periods<span class="token operator">=</span><span class="token number">7</span><span class="token punctuation">,</span>freq<span class="token operator">=</span><span class="token string">'2M'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>frame </code></pre><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># freq按照一个半小时取</span>frame <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>    data<span class="token punctuation">,</span> pd<span class="token punctuation">.</span>date_range<span class="token punctuation">(</span>start<span class="token operator">=</span><span class="token string">'2020-1-1'</span><span class="token punctuation">,</span> periods<span class="token operator">=</span><span class="token number">7</span><span class="token punctuation">,</span> freq<span class="token operator">=</span><span class="token string">'1h30min'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>frame</code></pre><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 自由指定时间段</span>values <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'2019-12'</span><span class="token punctuation">,</span> <span class="token string">'2020-01'</span><span class="token punctuation">,</span> <span class="token string">'2019-11'</span><span class="token punctuation">,</span> <span class="token string">'2020-02'</span><span class="token punctuation">,</span> <span class="token string">'2019-12'</span><span class="token punctuation">,</span> <span class="token string">'2020-01'</span><span class="token punctuation">,</span> <span class="token string">'2019-07'</span><span class="token punctuation">]</span>frame <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>data<span class="token punctuation">,</span> pd<span class="token punctuation">.</span>PeriodIndex<span class="token punctuation">(</span>values<span class="token punctuation">,</span>freq<span class="token operator">=</span><span class="token string">'M'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>frame <span class="token comment" spellcheck="true"># 此处的 PeriodIndex 就表示时间段索引，freq 很必要，表示时间段的单位。</span></code></pre><pre class=" language-python"><code class="language-python">values <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'2019Q4'</span><span class="token punctuation">,</span> <span class="token string">'2020Q1'</span><span class="token punctuation">,</span> <span class="token string">'2019Q4'</span><span class="token punctuation">,</span> <span class="token string">'2020Q1'</span><span class="token punctuation">,</span> <span class="token string">'2019Q4'</span><span class="token punctuation">,</span> <span class="token string">'2020Q1'</span><span class="token punctuation">,</span> <span class="token string">'2019Q3'</span><span class="token punctuation">]</span>frame <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>data<span class="token punctuation">,</span> pd<span class="token punctuation">.</span>PeriodIndex<span class="token punctuation">(</span>values<span class="token punctuation">,</span> freq<span class="token operator">=</span><span class="token string">'Q'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>frame</code></pre><p>灵活的借助于 freq 参数可以灵活的映射时间段的单位。比如我们可以把月份映射为季<br>度：</p><pre class=" language-python"><code class="language-python">values <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'2019-12'</span><span class="token punctuation">,</span> <span class="token string">'2020-01'</span><span class="token punctuation">,</span> <span class="token string">'2019-11'</span><span class="token punctuation">,</span> <span class="token string">'2020-02'</span><span class="token punctuation">,</span> <span class="token string">'2019-12'</span><span class="token punctuation">,</span> <span class="token string">'2020-01'</span><span class="token punctuation">,</span> <span class="token string">'2019-07'</span><span class="token punctuation">]</span>frame <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>data<span class="token punctuation">,</span> pd<span class="token punctuation">.</span>PeriodIndex<span class="token punctuation">(</span>values<span class="token punctuation">,</span> freq<span class="token operator">=</span><span class="token string">'Q'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>frame</code></pre><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 反过来会以每个季度的起始值开始</span>values <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'2019Q4'</span><span class="token punctuation">,</span> <span class="token string">'2020Q1'</span><span class="token punctuation">,</span> <span class="token string">'2019Q4'</span><span class="token punctuation">,</span> <span class="token string">'2020Q1'</span><span class="token punctuation">,</span> <span class="token string">'2019Q4'</span><span class="token punctuation">,</span> <span class="token string">'2020Q1'</span><span class="token punctuation">,</span> <span class="token string">'2019Q3'</span><span class="token punctuation">]</span>frame <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>data<span class="token punctuation">,</span> pd<span class="token punctuation">.</span>PeriodIndex<span class="token punctuation">(</span>values<span class="token punctuation">,</span> freq<span class="token operator">=</span><span class="token string">'M'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>frame</code></pre><h1 id="4-4-时间信息的转换"><a href="#4-4-时间信息的转换" class="headerlink" title="4.4 时间信息的转换"></a>4.4 时间信息的转换</h1><blockquote><p>时间信息可以按照不同的单位进行不同形式的表示，由此就会产生各种不同层次的时间<br>信息的转换问题。比如以月份为单位时，我们是应该从月初开始算还是从月末开始算？再如<br>1 个学年通常会从 9 月份到第二年的 6 月，等等。</p></blockquote><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">from</span> pandas <span class="token keyword">import</span> DataFrame<span class="token keyword">from</span> datetime <span class="token keyword">import</span> datetimedata <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>    <span class="token string">'ID'</span><span class="token punctuation">:</span>    <span class="token punctuation">[</span><span class="token string">'000001'</span><span class="token punctuation">,</span> <span class="token string">'000002'</span><span class="token punctuation">,</span> <span class="token string">'000003'</span><span class="token punctuation">,</span> <span class="token string">'000004'</span><span class="token punctuation">,</span> <span class="token string">'000005'</span><span class="token punctuation">,</span> <span class="token string">'000006'</span><span class="token punctuation">,</span> <span class="token string">'000007'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'黎明'</span><span class="token punctuation">,</span> <span class="token string">'赵怡春'</span><span class="token punctuation">,</span> <span class="token string">'张富平'</span><span class="token punctuation">,</span> <span class="token string">'白丽'</span><span class="token punctuation">,</span> <span class="token string">'牛玉德'</span><span class="token punctuation">,</span> <span class="token string">'姚华'</span><span class="token punctuation">,</span> <span class="token string">'李南'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">'gender'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">'age'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">'height'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">1.88</span><span class="token punctuation">,</span> <span class="token number">1.78</span><span class="token punctuation">,</span> <span class="token number">1.81</span><span class="token punctuation">,</span> <span class="token number">1.86</span><span class="token punctuation">,</span> <span class="token number">1.74</span><span class="token punctuation">,</span> <span class="token number">1.75</span><span class="token punctuation">,</span> <span class="token number">1.76</span><span class="token punctuation">]</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>dates <span class="token operator">=</span> <span class="token punctuation">[</span>    datetime<span class="token punctuation">(</span><span class="token number">2019</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">29</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    datetime<span class="token punctuation">(</span><span class="token number">2019</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    datetime<span class="token punctuation">(</span><span class="token number">2019</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    datetime<span class="token punctuation">(</span><span class="token number">2019</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    datetime<span class="token punctuation">(</span><span class="token number">2020</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    datetime<span class="token punctuation">(</span><span class="token number">2020</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    datetime<span class="token punctuation">(</span><span class="token number">2020</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">]</span>frame <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>data<span class="token punctuation">,</span> index<span class="token operator">=</span>dates<span class="token punctuation">)</span></code></pre><p>为了后续统计的方便，我们现在想将以天数为单位的时间信息转换为以月份为单位的时间信息，可以考虑将时间信息直接转换为时间段信息，因为月份相对于天而言，是一个具有多个天的时间段。</p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># DataFrame的to_period方法，就是将时间点转换为时间段，其中的 freq 参数指定时间段的类型。</span>frame<span class="token punctuation">.</span>to_period<span class="token punctuation">(</span>freq<span class="token operator">=</span><span class="token string">'M'</span><span class="token punctuation">)</span></code></pre><p>如果我们认为学校的学年是从 9 月初开始计算，那么上述时间都应该是 2020 学年。此时可以定义新的 freq 参数值：</p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># # 参数A表示按照年来分，AUG 表示以8月作为最后一个月份，发现全部都是 2020 学年的年度单位了。</span>frame<span class="token punctuation">.</span>to_period<span class="token punctuation">(</span>freq<span class="token operator">=</span><span class="token string">'A-AUG'</span><span class="token punctuation">)</span></code></pre><p>比较复杂的是如何将时间段转换为粒度更小的时间单位(日期)，比如我们做个调整</p><ol><li>将所有索引时间全部保存为月份单位。</li><li>接下来可以再次调用 DataFrame 的 to_timestamp 方法，就是这个反操作：</li></ol><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 1. 先转为月份</span>frame<span class="token operator">=</span>frame<span class="token punctuation">.</span>to_period<span class="token punctuation">(</span>freq<span class="token operator">=</span><span class="token string">'M'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 2. 再转为日期，默认值是月初</span>frame<span class="token punctuation">.</span>to_timestamp<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># frame.to_timestamp(how='end') 重置到月底</span></code></pre><p>我们也可以使用另外一个更为方便的方法 asfreq，它完全通过 freq 参数既可以粒度变<br>大，也可以粒度变小：</p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 转换后的时间单位可以自由指定，D 表示天，T 表示小时等等</span>frame<span class="token punctuation">.</span>asfreq<span class="token punctuation">(</span>freq<span class="token operator">=</span><span class="token string">'D'</span><span class="token punctuation">,</span>how<span class="token operator">=</span><span class="token string">'end'</span><span class="token punctuation">)</span></code></pre><pre class=" language-python"><code class="language-python">frame<span class="token punctuation">.</span>asfreq<span class="token punctuation">(</span>freq<span class="token operator">=</span><span class="token string">'A'</span><span class="token punctuation">)</span></code></pre><p>上述两种转换为小粒度的方法都依赖于当初生成时间段的单位，比如在前面设置 9 月初开始的学年练习中，如果对于得到的学年也进行小粒度时间转换，那么就会使用当时设定的时间点来表达：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">from</span> pandas <span class="token keyword">import</span> DataFrame<span class="token keyword">from</span> datetime <span class="token keyword">import</span> datetimedata <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>    <span class="token string">'ID'</span><span class="token punctuation">:</span>    <span class="token punctuation">[</span><span class="token string">'000001'</span><span class="token punctuation">,</span> <span class="token string">'000002'</span><span class="token punctuation">,</span> <span class="token string">'000003'</span><span class="token punctuation">,</span> <span class="token string">'000004'</span><span class="token punctuation">,</span> <span class="token string">'000005'</span><span class="token punctuation">,</span> <span class="token string">'000006'</span><span class="token punctuation">,</span> <span class="token string">'000007'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'黎明'</span><span class="token punctuation">,</span> <span class="token string">'赵怡春'</span><span class="token punctuation">,</span> <span class="token string">'张富平'</span><span class="token punctuation">,</span> <span class="token string">'白丽'</span><span class="token punctuation">,</span> <span class="token string">'牛玉德'</span><span class="token punctuation">,</span> <span class="token string">'姚华'</span><span class="token punctuation">,</span> <span class="token string">'李南'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">'gender'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">'age'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">'height'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">1.88</span><span class="token punctuation">,</span> <span class="token number">1.78</span><span class="token punctuation">,</span> <span class="token number">1.81</span><span class="token punctuation">,</span> <span class="token number">1.86</span><span class="token punctuation">,</span> <span class="token number">1.74</span><span class="token punctuation">,</span> <span class="token number">1.75</span><span class="token punctuation">,</span> <span class="token number">1.76</span><span class="token punctuation">]</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>dates <span class="token operator">=</span> <span class="token punctuation">[</span>    datetime<span class="token punctuation">(</span><span class="token number">2019</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">29</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    datetime<span class="token punctuation">(</span><span class="token number">2019</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    datetime<span class="token punctuation">(</span><span class="token number">2019</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    datetime<span class="token punctuation">(</span><span class="token number">2019</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    datetime<span class="token punctuation">(</span><span class="token number">2020</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    datetime<span class="token punctuation">(</span><span class="token number">2020</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    datetime<span class="token punctuation">(</span><span class="token number">2020</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">]</span>frame <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>data<span class="token punctuation">,</span> index<span class="token operator">=</span>dates<span class="token punctuation">)</span>frame<span class="token operator">=</span>frame<span class="token punctuation">.</span>to_period<span class="token punctuation">(</span>freq<span class="token operator">=</span><span class="token string">'A-AUG'</span><span class="token punctuation">)</span></code></pre><pre class=" language-python"><code class="language-python">frame<span class="token punctuation">.</span>to_timestamp<span class="token punctuation">(</span>how<span class="token operator">=</span><span class="token string">'end'</span><span class="token punctuation">)</span></code></pre><pre class=" language-python"><code class="language-python"></code></pre>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 数据分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MOOC-Python大数据分析（二）3.5-3.6 数据查询分析（高级篇）（二）</title>
      <link href="2020/11/03/mooc-python-da-shu-ju-fen-xi-er/"/>
      <url>2020/11/03/mooc-python-da-shu-ju-fen-xi-er/</url>
      
        <content type="html"><![CDATA[<h1 id="3-5-子查询"><a href="#3-5-子查询" class="headerlink" title="3.5 子查询"></a>3.5 子查询</h1><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pddata <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>    <span class="token string">'ID'</span><span class="token punctuation">:</span>    <span class="token punctuation">[</span><span class="token string">'000001'</span><span class="token punctuation">,</span> <span class="token string">'000002'</span><span class="token punctuation">,</span> <span class="token string">'000003'</span><span class="token punctuation">,</span> <span class="token string">'000004'</span><span class="token punctuation">,</span> <span class="token string">'000005'</span><span class="token punctuation">,</span> <span class="token string">'000006'</span><span class="token punctuation">,</span> <span class="token string">'000007'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'黎明'</span><span class="token punctuation">,</span> <span class="token string">'赵怡春'</span><span class="token punctuation">,</span> <span class="token string">'张富平'</span><span class="token punctuation">,</span> <span class="token string">'白丽'</span><span class="token punctuation">,</span> <span class="token string">'牛玉德'</span><span class="token punctuation">,</span> <span class="token string">'姚华'</span><span class="token punctuation">,</span> <span class="token string">'李南'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">'gender'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">'age'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">'height'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">1.88</span><span class="token punctuation">,</span> <span class="token number">1.78</span><span class="token punctuation">,</span> <span class="token number">1.81</span><span class="token punctuation">,</span> <span class="token number">1.86</span><span class="token punctuation">,</span> <span class="token number">1.74</span><span class="token punctuation">,</span> <span class="token number">1.75</span><span class="token punctuation">,</span> <span class="token number">1.76</span><span class="token punctuation">]</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>frame <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>data<span class="token punctuation">)</span></code></pre><pre class=" language-python"><code class="language-python">maxHeight<span class="token operator">=</span>frame<span class="token punctuation">[</span><span class="token punctuation">(</span>frame<span class="token punctuation">[</span><span class="token string">'gender'</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'height'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>max<span class="token punctuation">(</span><span class="token punctuation">)</span>maxHeight</code></pre><pre><code>1.86</code></pre><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 获取女生身高的最大值</span>frame<span class="token punctuation">[</span><span class="token punctuation">(</span>frame<span class="token punctuation">[</span><span class="token string">'gender'</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token boolean">False</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token punctuation">(</span>frame<span class="token punctuation">[</span><span class="token string">'height'</span><span class="token punctuation">]</span> <span class="token operator">==</span> maxHeight<span class="token punctuation">)</span><span class="token punctuation">]</span></code></pre><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>ID</th>      <th>name</th>      <th>gender</th>      <th>age</th>      <th>height</th>    </tr>  </thead>  <tbody>    <tr>      <th>3</th>      <td>000004</td>      <td>白丽</td>      <td>False</td>      <td>18</td>      <td>1.86</td>    </tr>  </tbody></table></div><h1 id="3-6-高级子查询"><a href="#3-6-高级子查询" class="headerlink" title="3.6 高级子查询"></a>3.6 高级子查询</h1><h2 id="练习1"><a href="#练习1" class="headerlink" title="练习1"></a>练习1</h2><p>我们准备结合 scores 成绩数据来查询每个学生考的最好的那门课，即每个学生成绩最<br>高的课程号。<br>首先需要知道每个学生的最高成绩，然后根据这个成绩再去查询对应的课程号，显然是<br>个子查询。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pddata2 <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>    <span class="token string">'SID'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>        <span class="token string">'000001'</span><span class="token punctuation">,</span> <span class="token string">'000001'</span><span class="token punctuation">,</span> <span class="token string">'000002'</span><span class="token punctuation">,</span> <span class="token string">'000003'</span><span class="token punctuation">,</span> <span class="token string">'000003'</span><span class="token punctuation">,</span> <span class="token string">'000003'</span><span class="token punctuation">,</span> <span class="token string">'000004'</span><span class="token punctuation">,</span>        <span class="token string">'000004'</span><span class="token punctuation">,</span> <span class="token string">'000005'</span><span class="token punctuation">,</span> <span class="token string">'000006'</span><span class="token punctuation">,</span> <span class="token string">'000006'</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">'CID'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>        <span class="token string">'A01'</span><span class="token punctuation">,</span> <span class="token string">'A02'</span><span class="token punctuation">,</span> <span class="token string">'A01'</span><span class="token punctuation">,</span> <span class="token string">'A01'</span><span class="token punctuation">,</span> <span class="token string">'A02'</span><span class="token punctuation">,</span> <span class="token string">'B01'</span><span class="token punctuation">,</span> <span class="token string">'A01'</span><span class="token punctuation">,</span> <span class="token string">'A03'</span><span class="token punctuation">,</span> <span class="token string">'B01'</span><span class="token punctuation">,</span> <span class="token string">'A02'</span><span class="token punctuation">,</span>        <span class="token string">'B01'</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">'score'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">56</span><span class="token punctuation">,</span> <span class="token number">78</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">,</span> <span class="token number">74</span><span class="token punctuation">,</span> <span class="token number">86</span><span class="token punctuation">,</span> <span class="token number">89</span><span class="token punctuation">,</span> <span class="token number">67</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">77</span><span class="token punctuation">,</span> <span class="token number">76</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">]</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>scores <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>data2<span class="token punctuation">)</span></code></pre><h3 id="方法一："><a href="#方法一：" class="headerlink" title="方法一："></a>方法一：</h3><pre class=" language-python"><code class="language-python">frame1 <span class="token operator">=</span> scores<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">'SID'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'score'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>max<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 1</span>frame2 <span class="token operator">=</span> pd<span class="token punctuation">.</span>merge<span class="token punctuation">(</span>scores<span class="token punctuation">,</span>frame1<span class="token punctuation">,</span>on<span class="token operator">=</span><span class="token string">"SID"</span><span class="token punctuation">)</span>frame2<span class="token punctuation">[</span>frame2<span class="token punctuation">[</span><span class="token string">'score_x'</span><span class="token punctuation">]</span><span class="token operator">==</span>frame2<span class="token punctuation">[</span><span class="token string">'score_y'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">'SID'</span><span class="token punctuation">,</span><span class="token string">'CID'</span><span class="token punctuation">]</span><span class="token punctuation">]</span></code></pre><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>SID</th>      <th>CID</th>    </tr>  </thead>  <tbody>    <tr>      <th>1</th>      <td>000001</td>      <td>A02</td>    </tr>    <tr>      <th>2</th>      <td>000002</td>      <td>A01</td>    </tr>    <tr>      <th>5</th>      <td>000003</td>      <td>B01</td>    </tr>    <tr>      <th>7</th>      <td>000004</td>      <td>A03</td>    </tr>    <tr>      <th>8</th>      <td>000005</td>      <td>B01</td>    </tr>    <tr>      <th>10</th>      <td>000006</td>      <td>B01</td>    </tr>  </tbody></table></div><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 2 </span>frame2<span class="token operator">=</span>pd<span class="token punctuation">.</span>merge<span class="token punctuation">(</span>scores<span class="token punctuation">,</span>frame1<span class="token punctuation">,</span>on<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"SID"</span><span class="token punctuation">,</span><span class="token string">'score'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>frame2<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">'SID'</span><span class="token punctuation">,</span><span class="token string">'CID'</span><span class="token punctuation">]</span><span class="token punctuation">]</span></code></pre><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>SID</th>      <th>CID</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>000001</td>      <td>A02</td>    </tr>    <tr>      <th>1</th>      <td>000002</td>      <td>A01</td>    </tr>    <tr>      <th>2</th>      <td>000003</td>      <td>B01</td>    </tr>    <tr>      <th>3</th>      <td>000004</td>      <td>A03</td>    </tr>    <tr>      <th>4</th>      <td>000005</td>      <td>B01</td>    </tr>    <tr>      <th>5</th>      <td>000006</td>      <td>B01</td>    </tr>  </tbody></table></div><h3 id="方法二："><a href="#方法二：" class="headerlink" title="方法二："></a>方法二：</h3><p>此外还可以巧妙地利用行索引来提取：</p><pre class=" language-python"><code class="language-python">scores <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>data2<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 返回的是SID分组下，score最大值的索引值</span>idxmax <span class="token operator">=</span> scores<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">"SID"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'score'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>idxmax<span class="token punctuation">(</span><span class="token punctuation">)</span>scores<span class="token punctuation">[</span>scores<span class="token punctuation">.</span>index<span class="token punctuation">.</span>isin<span class="token punctuation">(</span>idxmax<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">"SID"</span><span class="token punctuation">,</span><span class="token string">"CID"</span><span class="token punctuation">]</span><span class="token punctuation">]</span></code></pre><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>SID</th>      <th>CID</th>    </tr>  </thead>  <tbody>    <tr>      <th>1</th>      <td>000001</td>      <td>A02</td>    </tr>    <tr>      <th>2</th>      <td>000002</td>      <td>A01</td>    </tr>    <tr>      <th>5</th>      <td>000003</td>      <td>B01</td>    </tr>    <tr>      <th>7</th>      <td>000004</td>      <td>A03</td>    </tr>    <tr>      <th>8</th>      <td>000005</td>      <td>B01</td>    </tr>    <tr>      <th>10</th>      <td>000006</td>      <td>B01</td>    </tr>  </tbody></table></div><h3 id="方法三："><a href="#方法三：" class="headerlink" title="方法三："></a>方法三：</h3><pre class=" language-python"><code class="language-python">scores<span class="token operator">=</span>scores<span class="token punctuation">.</span>sort_values<span class="token punctuation">(</span>by<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'SID'</span><span class="token punctuation">,</span><span class="token string">'score'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>ascending<span class="token operator">=</span><span class="token punctuation">[</span><span class="token boolean">True</span><span class="token punctuation">,</span><span class="token boolean">False</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 通过cumcount()取出每个SID的第一条数据</span>scores<span class="token punctuation">[</span><span class="token string">'rank'</span><span class="token punctuation">]</span><span class="token operator">=</span>scores<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">"SID"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>cumcount<span class="token punctuation">(</span><span class="token punctuation">)</span>scores<span class="token punctuation">[</span>scores<span class="token punctuation">[</span><span class="token string">'rank'</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">]</span></code></pre><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>SID</th>      <th>CID</th>      <th>score</th>      <th>rank</th>    </tr>  </thead>  <tbody>    <tr>      <th>1</th>      <td>000001</td>      <td>A02</td>      <td>78</td>      <td>0</td>    </tr>    <tr>      <th>2</th>      <td>000002</td>      <td>A01</td>      <td>90</td>      <td>0</td>    </tr>    <tr>      <th>5</th>      <td>000003</td>      <td>B01</td>      <td>89</td>      <td>0</td>    </tr>    <tr>      <th>7</th>      <td>000004</td>      <td>A03</td>      <td>80</td>      <td>0</td>    </tr>    <tr>      <th>8</th>      <td>000005</td>      <td>B01</td>      <td>77</td>      <td>0</td>    </tr>    <tr>      <th>10</th>      <td>000006</td>      <td>B01</td>      <td>90</td>      <td>0</td>    </tr>  </tbody></table></div><h2 id="练习2"><a href="#练习2" class="headerlink" title="练习2"></a>练习2</h2><p>查询选修了A01课程的学生，A02课程成绩为多少？</p><h3 id="标准子查询"><a href="#标准子查询" class="headerlink" title="标准子查询"></a>标准子查询</h3><pre class=" language-python"><code class="language-python">CIDs <span class="token operator">=</span> scores<span class="token punctuation">[</span>scores<span class="token punctuation">[</span><span class="token string">'CID'</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'A01'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'SID'</span><span class="token punctuation">]</span>scores<span class="token punctuation">[</span><span class="token punctuation">(</span>scores<span class="token punctuation">[</span><span class="token string">'SID'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>isin<span class="token punctuation">(</span>CIDs<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token punctuation">(</span>scores<span class="token punctuation">[</span><span class="token string">'CID'</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'A02'</span><span class="token punctuation">)</span><span class="token punctuation">]</span></code></pre><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>SID</th>      <th>CID</th>      <th>score</th>      <th>rank</th>    </tr>  </thead>  <tbody>    <tr>      <th>1</th>      <td>000001</td>      <td>A02</td>      <td>78</td>      <td>0</td>    </tr>    <tr>      <th>4</th>      <td>000003</td>      <td>A02</td>      <td>86</td>      <td>1</td>    </tr>  </tbody></table></div><h3 id="透视图"><a href="#透视图" class="headerlink" title="透视图"></a>透视图</h3><pre class=" language-python"><code class="language-python">frame <span class="token operator">=</span> scores<span class="token punctuation">.</span>pivot_table<span class="token punctuation">(</span>values<span class="token operator">=</span><span class="token string">'score'</span><span class="token punctuation">,</span>index<span class="token operator">=</span><span class="token string">'SID'</span><span class="token punctuation">,</span>columns<span class="token operator">=</span><span class="token string">'CID'</span><span class="token punctuation">,</span>fill_value<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>frame</code></pre><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th>CID</th>      <th>A01</th>      <th>A02</th>      <th>A03</th>      <th>B01</th>    </tr>    <tr>      <th>SID</th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>000001</th>      <td>56</td>      <td>78</td>      <td>-1</td>      <td>-1</td>    </tr>    <tr>      <th>000002</th>      <td>90</td>      <td>-1</td>      <td>-1</td>      <td>-1</td>    </tr>    <tr>      <th>000003</th>      <td>74</td>      <td>86</td>      <td>-1</td>      <td>89</td>    </tr>    <tr>      <th>000004</th>      <td>67</td>      <td>-1</td>      <td>80</td>      <td>-1</td>    </tr>    <tr>      <th>000005</th>      <td>-1</td>      <td>-1</td>      <td>-1</td>      <td>77</td>    </tr>    <tr>      <th>000006</th>      <td>-1</td>      <td>76</td>      <td>-1</td>      <td>90</td>    </tr>  </tbody></table></div><pre class=" language-python"><code class="language-python">frame<span class="token punctuation">[</span><span class="token punctuation">(</span>frame<span class="token punctuation">[</span><span class="token string">'A01'</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token punctuation">(</span>frame<span class="token punctuation">[</span><span class="token string">'A02'</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'A01'</span><span class="token punctuation">]</span></code></pre><pre><code>SID000001    56000003    74Name: A01, dtype: int64</code></pre>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 数据分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MOOC-Python大数据分析（一）3.3-3.4 数据查询分析（高级篇）（一）</title>
      <link href="2020/10/28/mooc-python-da-shu-ju-fen-xi-yi/"/>
      <url>2020/10/28/mooc-python-da-shu-ju-fen-xi-yi/</url>
      
        <content type="html"><![CDATA[<h1 id="3-3-电影评分数据集的分析1"><a href="#3-3-电影评分数据集的分析1" class="headerlink" title="3.3 电影评分数据集的分析1"></a>3.3 电影评分数据集的分析1</h1><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd unames <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'uid'</span><span class="token punctuation">,</span><span class="token string">'age'</span><span class="token punctuation">,</span><span class="token string">'gender'</span><span class="token punctuation">,</span><span class="token string">'occupation'</span><span class="token punctuation">,</span><span class="token string">'zip'</span><span class="token punctuation">]</span>users<span class="token operator">=</span>  pd<span class="token punctuation">.</span>read_table<span class="token punctuation">(</span><span class="token string">'u.user'</span><span class="token punctuation">,</span>sep<span class="token operator">=</span><span class="token string">'|'</span><span class="token punctuation">,</span>header<span class="token operator">=</span>None<span class="token punctuation">,</span>names<span class="token operator">=</span>unames<span class="token punctuation">)</span>rnames<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'uid'</span><span class="token punctuation">,</span><span class="token string">'mid'</span><span class="token punctuation">,</span><span class="token string">'rating'</span><span class="token punctuation">,</span><span class="token string">'timestamp'</span><span class="token punctuation">]</span>ratings<span class="token operator">=</span>pd<span class="token punctuation">.</span>read_table<span class="token punctuation">(</span><span class="token string">'u.data'</span><span class="token punctuation">,</span>sep<span class="token operator">=</span><span class="token string">'\t'</span><span class="token punctuation">,</span>header<span class="token operator">=</span>None<span class="token punctuation">,</span>names<span class="token operator">=</span>rnames<span class="token punctuation">)</span>frame <span class="token operator">=</span> pd<span class="token punctuation">.</span>merge<span class="token punctuation">(</span>ratings<span class="token punctuation">,</span>users<span class="token punctuation">)</span></code></pre><pre class=" language-python"><code class="language-python">frame<span class="token punctuation">[</span><span class="token string">'rating'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>groupby<span class="token punctuation">(</span>frame<span class="token punctuation">[</span><span class="token string">'gender'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><pre><code>genderF    3.531507M    3.529289Name: rating, dtype: float64</code></pre><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 四舍五入到十位</span>frame<span class="token punctuation">[</span><span class="token string">'rating'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>groupby<span class="token punctuation">(</span>frame<span class="token punctuation">[</span><span class="token string">'age'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>apply<span class="token punctuation">(</span>round<span class="token punctuation">,</span>args<span class="token operator">=</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><pre><code>age10    3.43619520    3.48451330    3.47695040    3.59477550    3.61886360    3.66090870    3.589212Name: rating, dtype: float64</code></pre><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 年龄段结合性别，多个分组注意加[] </span>frame<span class="token punctuation">[</span><span class="token string">'rating'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token punctuation">[</span>frame<span class="token punctuation">[</span><span class="token string">'age'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>apply<span class="token punctuation">(</span>round<span class="token punctuation">,</span>args<span class="token operator">=</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>frame<span class="token punctuation">[</span><span class="token string">'gender'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><pre><code>age  gender10   F         3.327327     M         3.50472620   F         3.440927     M         3.49903530   F         3.479584     M         3.47611140   F         3.701125     M         3.54458750   F         3.533639     M         3.65132860   F         3.600423     M         3.66702370   F         3.239437     M         3.649635Name: rating, dtype: float64</code></pre><pre class=" language-python"><code class="language-python">mnames <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token string">'mid'</span><span class="token punctuation">,</span> <span class="token string">'title'</span><span class="token punctuation">,</span> <span class="token string">'date1'</span><span class="token punctuation">,</span> <span class="token string">'date2'</span><span class="token punctuation">,</span> <span class="token string">'url'</span><span class="token punctuation">,</span> <span class="token string">'unknown'</span><span class="token punctuation">,</span> <span class="token string">'Action'</span><span class="token punctuation">,</span> <span class="token string">'Adventure'</span><span class="token punctuation">,</span>    <span class="token string">'Animation'</span><span class="token punctuation">,</span> <span class="token string">'Children'</span><span class="token punctuation">,</span> <span class="token string">'Comedy'</span><span class="token punctuation">,</span> <span class="token string">'Crime'</span><span class="token punctuation">,</span> <span class="token string">'Documentary'</span><span class="token punctuation">,</span> <span class="token string">'Drama'</span><span class="token punctuation">,</span>    <span class="token string">'Fantasy'</span><span class="token punctuation">,</span> <span class="token string">'Film-Noir'</span><span class="token punctuation">,</span> <span class="token string">'Horror'</span><span class="token punctuation">,</span> <span class="token string">'Musical'</span><span class="token punctuation">,</span> <span class="token string">'Mystery'</span><span class="token punctuation">,</span> <span class="token string">'Romance'</span><span class="token punctuation">,</span>    <span class="token string">'Sci-Fi'</span><span class="token punctuation">,</span> <span class="token string">'Thriller'</span><span class="token punctuation">,</span> <span class="token string">'War'</span><span class="token punctuation">,</span> <span class="token string">'Western'</span><span class="token punctuation">]</span>movies <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_table<span class="token punctuation">(</span><span class="token string">'u.item'</span><span class="token punctuation">,</span>                       sep<span class="token operator">=</span><span class="token string">'|'</span><span class="token punctuation">,</span>                       header<span class="token operator">=</span>None<span class="token punctuation">,</span>                       names<span class="token operator">=</span>mnames<span class="token punctuation">,</span>                      encoding<span class="token operator">=</span><span class="token string">"ISO-8859-1"</span><span class="token punctuation">)</span></code></pre><pre class=" language-python"><code class="language-python">frame <span class="token operator">=</span> pd<span class="token punctuation">.</span>merge<span class="token punctuation">(</span>pd<span class="token punctuation">.</span>merge<span class="token punctuation">(</span>ratings<span class="token punctuation">,</span>users<span class="token punctuation">)</span><span class="token punctuation">,</span>movies<span class="token punctuation">)</span></code></pre><pre class=" language-python"><code class="language-python">frame<span class="token punctuation">[</span><span class="token string">'rating'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token punctuation">[</span>frame<span class="token punctuation">[</span><span class="token string">'gender'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>frame<span class="token punctuation">[</span><span class="token string">'title'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>sort_values<span class="token punctuation">(</span>ascending<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span></code></pre><pre><code>gender  title                        M       Quiet Room, The (1996)           5.0F       Mina Tannenbaum (1994)           5.0M       Star Kid (1997)                  5.0        Prefontaine (1997)               5.0        Great Day in Harlem, A (1994)    5.0                                        ...         Babysitter, The (1995)           1.0        Country Life (1994)              1.0        Babyfever (1994)                 1.0        Modern Affair, A (1995)          1.0F       Vermont Is For Lovers (1992)     1.0Name: rating, Length: 3110, dtype: float64</code></pre><h1 id="3-4-电影评分数据集的分析2"><a href="#3-4-电影评分数据集的分析2" class="headerlink" title="3.4 电影评分数据集的分析2"></a>3.4 电影评分数据集的分析2</h1><blockquote><p>上一节的最后发现某部电影的平均评分为5分，显然是不可能的。可能存在评分人只有一人的情况。我们来看看评分的人数有多少</p></blockquote><h2 id="3-4-1-通过分组来分析数据"><a href="#3-4-1-通过分组来分析数据" class="headerlink" title="3.4.1 通过分组来分析数据"></a>3.4.1 通过分组来分析数据</h2><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 结果不省略，全部显示</span><span class="token comment" spellcheck="true"># pd.set_option('display.max_row',None)</span><span class="token comment" spellcheck="true"># agg([ '','' ])对结果进行两种不同的聚合运算</span>frame1<span class="token operator">=</span>frame<span class="token punctuation">[</span><span class="token string">'rating'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token punctuation">[</span>frame<span class="token punctuation">[</span><span class="token string">'gender'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> frame<span class="token punctuation">[</span><span class="token string">'title'</span><span class="token punctuation">]</span>                         <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>agg<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'mean'</span><span class="token punctuation">,</span> <span class="token string">'count'</span>                                 <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>sort_values<span class="token punctuation">(</span>by<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'count'</span><span class="token punctuation">,</span> <span class="token string">'mean'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                                                ascending<span class="token operator">=</span><span class="token punctuation">[</span><span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre><pre class=" language-python"><code class="language-python">frame1<span class="token punctuation">[</span>frame1<span class="token punctuation">[</span><span class="token string">'count'</span><span class="token punctuation">]</span> <span class="token operator">></span> <span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">.</span>sort_values<span class="token punctuation">(</span>by<span class="token operator">=</span><span class="token string">'mean'</span><span class="token punctuation">,</span> ascending<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span></code></pre><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th></th>      <th>mean</th>      <th>count</th>    </tr>    <tr>      <th>gender</th>      <th>title</th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th rowspan="11" valign="top">M</th>      <th>Casablanca (1942)</th>      <td>4.473404</td>      <td>188</td>    </tr>    <tr>      <th>Shawshank Redemption, The (1994)</th>      <td>4.410959</td>      <td>219</td>    </tr>    <tr>      <th>Schindler's List (1993)</th>      <td>4.406393</td>      <td>219</td>    </tr>    <tr>      <th>Rear Window (1954)</th>      <td>4.400000</td>      <td>155</td>    </tr>    <tr>      <th>Usual Suspects, The (1995)</th>      <td>4.399061</td>      <td>213</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>Volcano (1997)</th>      <td>2.715152</td>      <td>165</td>    </tr>    <tr>      <th>George of the Jungle (1997)</th>      <td>2.669643</td>      <td>112</td>    </tr>    <tr>      <th>Spawn (1997)</th>      <td>2.669565</td>      <td>115</td>    </tr>    <tr>      <th>Batman Returns (1992)</th>      <td>2.641026</td>      <td>117</td>    </tr>    <tr>      <th>Event Horizon (1997)</th>      <td>2.613861</td>      <td>101</td>    </tr>  </tbody></table><p>258 rows × 2 columns</p></div><h2 id="3-4-2-通过透视图来分析"><a href="#3-4-2-通过透视图来分析" class="headerlink" title="3.4.2 通过透视图来分析"></a>3.4.2 通过透视图来分析</h2><blockquote><p>pivot_table</p></blockquote><pre class=" language-python"><code class="language-python">frame<span class="token punctuation">.</span>pivot_table<span class="token punctuation">(</span><span class="token string">'rating'</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token string">'title'</span><span class="token punctuation">,</span> columns<span class="token operator">=</span><span class="token string">'gender'</span><span class="token punctuation">,</span>                  aggfunc<span class="token operator">=</span><span class="token string">'mean'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>sort_values<span class="token punctuation">(</span>by<span class="token operator">=</span><span class="token string">'F'</span><span class="token punctuation">,</span> ascending<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span></code></pre><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th>gender</th>      <th>F</th>      <th>M</th>    </tr>    <tr>      <th>title</th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>Prefontaine (1997)</th>      <td>5.0</td>      <td>5.000000</td>    </tr>    <tr>      <th>Faster Pussycat! Kill! Kill! (1965)</th>      <td>5.0</td>      <td>2.666667</td>    </tr>    <tr>      <th>Telling Lies in America (1997)</th>      <td>5.0</td>      <td>3.083333</td>    </tr>    <tr>      <th>Maya Lin: A Strong Clear Vision (1994)</th>      <td>5.0</td>      <td>4.333333</td>    </tr>    <tr>      <th>Stripes (1981)</th>      <td>5.0</td>      <td>3.500000</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>Wings of Courage (1995)</th>      <td>NaN</td>      <td>4.000000</td>    </tr>    <tr>      <th>Witness (1985)</th>      <td>NaN</td>      <td>4.000000</td>    </tr>    <tr>      <th>Wooden Man's Bride, The (Wu Kui) (1994)</th>      <td>NaN</td>      <td>2.666667</td>    </tr>    <tr>      <th>World of Apu, The (Apur Sansar) (1959)</th>      <td>NaN</td>      <td>4.000000</td>    </tr>    <tr>      <th>You So Crazy (1994)</th>      <td>NaN</td>      <td>3.000000</td>    </tr>  </tbody></table><p>1664 rows × 2 columns</p></div><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 过滤数据</span>ratings_by_title <span class="token operator">=</span> frame<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">'title'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 此时这个结果只有一列，是个序列类型的变量，因此可以直接使用序列变量的名称作为具体数值列的表示</span>frame<span class="token punctuation">.</span>pivot_table<span class="token punctuation">(</span>    <span class="token string">'rating'</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token string">'title'</span><span class="token punctuation">,</span> columns<span class="token operator">=</span><span class="token string">'gender'</span><span class="token punctuation">,</span>    aggfunc<span class="token operator">=</span><span class="token string">'mean'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>loc<span class="token punctuation">[</span>ratings_by_title<span class="token punctuation">.</span>index<span class="token punctuation">[</span>ratings_by_title <span class="token operator">></span> <span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">]</span></code></pre><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th>gender</th>      <th>F</th>      <th>M</th>    </tr>    <tr>      <th>title</th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>101 Dalmatians (1996)</th>      <td>3.116279</td>      <td>2.772727</td>    </tr>    <tr>      <th>12 Angry Men (1957)</th>      <td>4.269231</td>      <td>4.363636</td>    </tr>    <tr>      <th>2001: A Space Odyssey (1968)</th>      <td>3.491228</td>      <td>4.103960</td>    </tr>    <tr>      <th>Absolute Power (1997)</th>      <td>3.451613</td>      <td>3.343750</td>    </tr>    <tr>      <th>Abyss, The (1989)</th>      <td>3.814815</td>      <td>3.540323</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>Willy Wonka and the Chocolate Factory (1971)</th>      <td>3.752688</td>      <td>3.583691</td>    </tr>    <tr>      <th>Wizard of Oz, The (1939)</th>      <td>4.159420</td>      <td>4.045198</td>    </tr>    <tr>      <th>Wrong Trousers, The (1993)</th>      <td>4.444444</td>      <td>4.472527</td>    </tr>    <tr>      <th>Young Frankenstein (1974)</th>      <td>4.023810</td>      <td>3.924051</td>    </tr>    <tr>      <th>Young Guns (1988)</th>      <td>3.230769</td>      <td>3.204545</td>    </tr>  </tbody></table><p>334 rows × 2 columns</p></div><pre class=" language-python"><code class="language-python">frame1 <span class="token operator">=</span> frame<span class="token punctuation">.</span>pivot_table<span class="token punctuation">(</span><span class="token string">'rating'</span><span class="token punctuation">,</span>index<span class="token operator">=</span><span class="token string">'title'</span><span class="token punctuation">,</span>columns<span class="token operator">=</span><span class="token string">'gender'</span><span class="token punctuation">,</span>aggfunc<span class="token operator">=</span><span class="token string">'mean'</span><span class="token punctuation">)</span></code></pre><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 计算差值方便，但是不够科学。</span>frame1<span class="token punctuation">[</span><span class="token string">'diff'</span><span class="token punctuation">]</span><span class="token operator">=</span> <span class="token punctuation">(</span>frame1<span class="token punctuation">[</span><span class="token string">'M'</span><span class="token punctuation">]</span><span class="token operator">-</span>frame1<span class="token punctuation">[</span><span class="token string">'F'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>apply<span class="token punctuation">(</span>abs<span class="token punctuation">)</span>frame1<span class="token punctuation">.</span>sort_values<span class="token punctuation">(</span>by<span class="token operator">=</span><span class="token string">'diff'</span><span class="token punctuation">,</span>ascending<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span></code></pre><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th>gender</th>      <th>F</th>      <th>M</th>      <th>diff</th>    </tr>    <tr>      <th>title</th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>Delta of Venus (1994)</th>      <td>1.0</td>      <td>5.000000</td>      <td>4.000000</td>    </tr>    <tr>      <th>Two or Three Things I Know About Her (1966)</th>      <td>1.0</td>      <td>4.666667</td>      <td>3.666667</td>    </tr>    <tr>      <th>Paths of Glory (1957)</th>      <td>1.0</td>      <td>4.419355</td>      <td>3.419355</td>    </tr>    <tr>      <th>Magic Hour, The (1998)</th>      <td>1.0</td>      <td>4.250000</td>      <td>3.250000</td>    </tr>    <tr>      <th>Love and Death on Long Island (1997)</th>      <td>4.0</td>      <td>1.000000</td>      <td>3.000000</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>Wooden Man's Bride, The (Wu Kui) (1994)</th>      <td>NaN</td>      <td>2.666667</td>      <td>NaN</td>    </tr>    <tr>      <th>World of Apu, The (Apur Sansar) (1959)</th>      <td>NaN</td>      <td>4.000000</td>      <td>NaN</td>    </tr>    <tr>      <th>Yankee Zulu (1994)</th>      <td>1.0</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>You So Crazy (1994)</th>      <td>NaN</td>      <td>3.000000</td>      <td>NaN</td>    </tr>    <tr>      <th>Á köldum klaka (Cold Fever) (1994)</th>      <td>3.0</td>      <td>NaN</td>      <td>NaN</td>    </tr>  </tbody></table><p>1664 rows × 3 columns</p></div><blockquote><p>借助透视表，可以简单地提取出一列数据来计算。这比分组更加方便</p></blockquote><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 借助标准差更加科学</span>frame<span class="token punctuation">[</span><span class="token string">'rating'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token punctuation">[</span>frame<span class="token punctuation">[</span><span class="token string">'gender'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>frame<span class="token punctuation">[</span><span class="token string">'title'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>std<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>sort_values<span class="token punctuation">(</span>ascending<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span></code></pre><pre><code>gender  title                                   F       Turbo: A Power Rangers Movie (1997)         2.828427M       Mondo (1996)                                2.828427        Tough and Deadly (1995)                     2.828427F       Microcosmos: Le peuple de l&#39;herbe (1996)    2.828427M       For the Moment (1994)                       2.828427                                                      ...           Wife, The (1995)                                 NaN        Window to Paris (1994)                           NaN        Wings of Courage (1995)                          NaN        Witness (1985)                                   NaN        You So Crazy (1994)                              NaNName: rating, Length: 3110, dtype: float64</code></pre><h1 id="3-5-子查询"><a href="#3-5-子查询" class="headerlink" title="3.5 子查询"></a>3.5 子查询</h1><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pddata <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>    <span class="token string">'ID'</span><span class="token punctuation">:</span>    <span class="token punctuation">[</span><span class="token string">'000001'</span><span class="token punctuation">,</span> <span class="token string">'000002'</span><span class="token punctuation">,</span> <span class="token string">'000003'</span><span class="token punctuation">,</span> <span class="token string">'000004'</span><span class="token punctuation">,</span> <span class="token string">'000005'</span><span class="token punctuation">,</span> <span class="token string">'000006'</span><span class="token punctuation">,</span> <span class="token string">'000007'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'黎明'</span><span class="token punctuation">,</span> <span class="token string">'赵怡春'</span><span class="token punctuation">,</span> <span class="token string">'张富平'</span><span class="token punctuation">,</span> <span class="token string">'白丽'</span><span class="token punctuation">,</span> <span class="token string">'牛玉德'</span><span class="token punctuation">,</span> <span class="token string">'姚华'</span><span class="token punctuation">,</span> <span class="token string">'李南'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">'gender'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">'age'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">'height'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">1.88</span><span class="token punctuation">,</span> <span class="token number">1.78</span><span class="token punctuation">,</span> <span class="token number">1.81</span><span class="token punctuation">,</span> <span class="token number">1.86</span><span class="token punctuation">,</span> <span class="token number">1.74</span><span class="token punctuation">,</span> <span class="token number">1.75</span><span class="token punctuation">,</span> <span class="token number">1.76</span><span class="token punctuation">]</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>frame <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>data<span class="token punctuation">)</span></code></pre><pre class=" language-python"><code class="language-python">maxHeight<span class="token operator">=</span>frame<span class="token punctuation">[</span><span class="token punctuation">(</span>frame<span class="token punctuation">[</span><span class="token string">'gender'</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'height'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>max<span class="token punctuation">(</span><span class="token punctuation">)</span>maxHeight</code></pre><pre><code>1.86</code></pre><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 获取女生身高的最大值</span>frame<span class="token punctuation">[</span><span class="token punctuation">(</span>frame<span class="token punctuation">[</span><span class="token string">'gender'</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token boolean">False</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token punctuation">(</span>frame<span class="token punctuation">[</span><span class="token string">'height'</span><span class="token punctuation">]</span> <span class="token operator">==</span> maxHeight<span class="token punctuation">)</span><span class="token punctuation">]</span></code></pre><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>ID</th>      <th>name</th>      <th>gender</th>      <th>age</th>      <th>height</th>    </tr>  </thead>  <tbody>    <tr>      <th>3</th>      <td>000004</td>      <td>白丽</td>      <td>False</td>      <td>18</td>      <td>1.86</td>    </tr>  </tbody></table></div><h1 id="3-6-高级子查询"><a href="#3-6-高级子查询" class="headerlink" title="3.6 高级子查询"></a>3.6 高级子查询</h1><h2 id="练习1"><a href="#练习1" class="headerlink" title="练习1"></a>练习1</h2><p>我们准备结合 scores 成绩数据来查询每个学生考的最好的那门课，即每个学生成绩最高的课程号。<br>首先需要知道每个学生的最高成绩，然后根据这个成绩再去查询对应的课程号，显然是个子查询。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pddata2 <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>    <span class="token string">'SID'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>        <span class="token string">'000001'</span><span class="token punctuation">,</span> <span class="token string">'000001'</span><span class="token punctuation">,</span> <span class="token string">'000002'</span><span class="token punctuation">,</span> <span class="token string">'000003'</span><span class="token punctuation">,</span> <span class="token string">'000003'</span><span class="token punctuation">,</span> <span class="token string">'000003'</span><span class="token punctuation">,</span> <span class="token string">'000004'</span><span class="token punctuation">,</span>        <span class="token string">'000004'</span><span class="token punctuation">,</span> <span class="token string">'000005'</span><span class="token punctuation">,</span> <span class="token string">'000006'</span><span class="token punctuation">,</span> <span class="token string">'000006'</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">'CID'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>        <span class="token string">'A01'</span><span class="token punctuation">,</span> <span class="token string">'A02'</span><span class="token punctuation">,</span> <span class="token string">'A01'</span><span class="token punctuation">,</span> <span class="token string">'A01'</span><span class="token punctuation">,</span> <span class="token string">'A02'</span><span class="token punctuation">,</span> <span class="token string">'B01'</span><span class="token punctuation">,</span> <span class="token string">'A01'</span><span class="token punctuation">,</span> <span class="token string">'A03'</span><span class="token punctuation">,</span> <span class="token string">'B01'</span><span class="token punctuation">,</span> <span class="token string">'A02'</span><span class="token punctuation">,</span>        <span class="token string">'B01'</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">'score'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">56</span><span class="token punctuation">,</span> <span class="token number">78</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">,</span> <span class="token number">74</span><span class="token punctuation">,</span> <span class="token number">86</span><span class="token punctuation">,</span> <span class="token number">89</span><span class="token punctuation">,</span> <span class="token number">67</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">77</span><span class="token punctuation">,</span> <span class="token number">76</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">]</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>scores <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>data2<span class="token punctuation">)</span></code></pre><h3 id="方法一："><a href="#方法一：" class="headerlink" title="方法一："></a>方法一：</h3><pre class=" language-python"><code class="language-python">frame1 <span class="token operator">=</span> scores<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">'SID'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'score'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>max<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 1</span>frame2 <span class="token operator">=</span> pd<span class="token punctuation">.</span>merge<span class="token punctuation">(</span>scores<span class="token punctuation">,</span>frame1<span class="token punctuation">,</span>on<span class="token operator">=</span><span class="token string">"SID"</span><span class="token punctuation">)</span>frame2<span class="token punctuation">[</span>frame2<span class="token punctuation">[</span><span class="token string">'score_x'</span><span class="token punctuation">]</span><span class="token operator">==</span>frame2<span class="token punctuation">[</span><span class="token string">'score_y'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">'SID'</span><span class="token punctuation">,</span><span class="token string">'CID'</span><span class="token punctuation">]</span><span class="token punctuation">]</span></code></pre><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>SID</th>      <th>CID</th>    </tr>  </thead>  <tbody>    <tr>      <th>1</th>      <td>000001</td>      <td>A02</td>    </tr>    <tr>      <th>2</th>      <td>000002</td>      <td>A01</td>    </tr>    <tr>      <th>5</th>      <td>000003</td>      <td>B01</td>    </tr>    <tr>      <th>7</th>      <td>000004</td>      <td>A03</td>    </tr>    <tr>      <th>8</th>      <td>000005</td>      <td>B01</td>    </tr>    <tr>      <th>10</th>      <td>000006</td>      <td>B01</td>    </tr>  </tbody></table></div><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 2 </span>frame2<span class="token operator">=</span>pd<span class="token punctuation">.</span>merge<span class="token punctuation">(</span>scores<span class="token punctuation">,</span>frame1<span class="token punctuation">,</span>on<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"SID"</span><span class="token punctuation">,</span><span class="token string">'score'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>frame2<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">'SID'</span><span class="token punctuation">,</span><span class="token string">'CID'</span><span class="token punctuation">]</span><span class="token punctuation">]</span></code></pre><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>SID</th>      <th>CID</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>000001</td>      <td>A02</td>    </tr>    <tr>      <th>1</th>      <td>000002</td>      <td>A01</td>    </tr>    <tr>      <th>2</th>      <td>000003</td>      <td>B01</td>    </tr>    <tr>      <th>3</th>      <td>000004</td>      <td>A03</td>    </tr>    <tr>      <th>4</th>      <td>000005</td>      <td>B01</td>    </tr>    <tr>      <th>5</th>      <td>000006</td>      <td>B01</td>    </tr>  </tbody></table></div><h3 id="方法二："><a href="#方法二：" class="headerlink" title="方法二："></a>方法二：</h3><p>此外还可以巧妙地利用行索引来提取：</p><pre class=" language-python"><code class="language-python">scores <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>data2<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 返回的是SID分组下，score最大值的索引值</span>idxmax <span class="token operator">=</span> scores<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">"SID"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'score'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>idxmax<span class="token punctuation">(</span><span class="token punctuation">)</span>scores<span class="token punctuation">[</span>scores<span class="token punctuation">.</span>index<span class="token punctuation">.</span>isin<span class="token punctuation">(</span>idxmax<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">"SID"</span><span class="token punctuation">,</span><span class="token string">"CID"</span><span class="token punctuation">]</span><span class="token punctuation">]</span></code></pre><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>SID</th>      <th>CID</th>    </tr>  </thead>  <tbody>    <tr>      <th>1</th>      <td>000001</td>      <td>A02</td>    </tr>    <tr>      <th>2</th>      <td>000002</td>      <td>A01</td>    </tr>    <tr>      <th>5</th>      <td>000003</td>      <td>B01</td>    </tr>    <tr>      <th>7</th>      <td>000004</td>      <td>A03</td>    </tr>    <tr>      <th>8</th>      <td>000005</td>      <td>B01</td>    </tr>    <tr>      <th>10</th>      <td>000006</td>      <td>B01</td>    </tr>  </tbody></table></div><h3 id="方法三："><a href="#方法三：" class="headerlink" title="方法三："></a>方法三：</h3><pre class=" language-python"><code class="language-python">scores<span class="token operator">=</span>scores<span class="token punctuation">.</span>sort_values<span class="token punctuation">(</span>by<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'SID'</span><span class="token punctuation">,</span><span class="token string">'score'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>ascending<span class="token operator">=</span><span class="token punctuation">[</span><span class="token boolean">True</span><span class="token punctuation">,</span><span class="token boolean">False</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 通过cumcount()取出每个SID的第一条数据</span>scores<span class="token punctuation">[</span><span class="token string">'rank'</span><span class="token punctuation">]</span><span class="token operator">=</span>scores<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">"SID"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>cumcount<span class="token punctuation">(</span><span class="token punctuation">)</span>scores<span class="token punctuation">[</span>scores<span class="token punctuation">[</span><span class="token string">'rank'</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">]</span></code></pre><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>SID</th>      <th>CID</th>      <th>score</th>      <th>rank</th>    </tr>  </thead>  <tbody>    <tr>      <th>1</th>      <td>000001</td>      <td>A02</td>      <td>78</td>      <td>0</td>    </tr>    <tr>      <th>2</th>      <td>000002</td>      <td>A01</td>      <td>90</td>      <td>0</td>    </tr>    <tr>      <th>5</th>      <td>000003</td>      <td>B01</td>      <td>89</td>      <td>0</td>    </tr>    <tr>      <th>7</th>      <td>000004</td>      <td>A03</td>      <td>80</td>      <td>0</td>    </tr>    <tr>      <th>8</th>      <td>000005</td>      <td>B01</td>      <td>77</td>      <td>0</td>    </tr>    <tr>      <th>10</th>      <td>000006</td>      <td>B01</td>      <td>90</td>      <td>0</td>    </tr>  </tbody></table></div><h2 id="练习2"><a href="#练习2" class="headerlink" title="练习2"></a>练习2</h2><p>查询选修了A01课程的学生，A02课程成绩为多少？</p><h3 id="标准子查询"><a href="#标准子查询" class="headerlink" title="标准子查询"></a>标准子查询</h3><pre class=" language-python"><code class="language-python">CIDs <span class="token operator">=</span> scores<span class="token punctuation">[</span>scores<span class="token punctuation">[</span><span class="token string">'CID'</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'A01'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'SID'</span><span class="token punctuation">]</span>scores<span class="token punctuation">[</span><span class="token punctuation">(</span>scores<span class="token punctuation">[</span><span class="token string">'SID'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>isin<span class="token punctuation">(</span>CIDs<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token punctuation">(</span>scores<span class="token punctuation">[</span><span class="token string">'CID'</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'A02'</span><span class="token punctuation">)</span><span class="token punctuation">]</span></code></pre><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>SID</th>      <th>CID</th>      <th>score</th>      <th>rank</th>    </tr>  </thead>  <tbody>    <tr>      <th>1</th>      <td>000001</td>      <td>A02</td>      <td>78</td>      <td>0</td>    </tr>    <tr>      <th>4</th>      <td>000003</td>      <td>A02</td>      <td>86</td>      <td>1</td>    </tr>  </tbody></table></div><h3 id="透视图"><a href="#透视图" class="headerlink" title="透视图"></a>透视图</h3><pre class=" language-python"><code class="language-python">frame <span class="token operator">=</span> scores<span class="token punctuation">.</span>pivot_table<span class="token punctuation">(</span>values<span class="token operator">=</span><span class="token string">'score'</span><span class="token punctuation">,</span>index<span class="token operator">=</span><span class="token string">'SID'</span><span class="token punctuation">,</span>columns<span class="token operator">=</span><span class="token string">'CID'</span><span class="token punctuation">,</span>fill_value<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>frame</code></pre><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th>CID</th>      <th>A01</th>      <th>A02</th>      <th>A03</th>      <th>B01</th>    </tr>    <tr>      <th>SID</th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>000001</th>      <td>56</td>      <td>78</td>      <td>-1</td>      <td>-1</td>    </tr>    <tr>      <th>000002</th>      <td>90</td>      <td>-1</td>      <td>-1</td>      <td>-1</td>    </tr>    <tr>      <th>000003</th>      <td>74</td>      <td>86</td>      <td>-1</td>      <td>89</td>    </tr>    <tr>      <th>000004</th>      <td>67</td>      <td>-1</td>      <td>80</td>      <td>-1</td>    </tr>    <tr>      <th>000005</th>      <td>-1</td>      <td>-1</td>      <td>-1</td>      <td>77</td>    </tr>    <tr>      <th>000006</th>      <td>-1</td>      <td>76</td>      <td>-1</td>      <td>90</td>    </tr>  </tbody></table></div><pre class=" language-python"><code class="language-python">frame<span class="token punctuation">[</span><span class="token punctuation">(</span>frame<span class="token punctuation">[</span><span class="token string">'A01'</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token punctuation">(</span>frame<span class="token punctuation">[</span><span class="token string">'A02'</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'A01'</span><span class="token punctuation">]</span></code></pre><pre><code>SID000001    56000003    74Name: A01, dtype: int64</code></pre>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 数据分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python学习导航</title>
      <link href="2020/10/22/python-xue-xi-dao-hang/"/>
      <url>2020/10/22/python-xue-xi-dao-hang/</url>
      
        <content type="html"><![CDATA[<p><a href="https://github.com/hi-weijun/PythonDataScience-Collections/blob/master/README.md#%E5%85%ADpython%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0">这是作者的GitHub仓库</a></p><p><a href="https://github.com/man824/PythonDataScience-Collections">这是我的GitHub仓库</a></p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>seaborn学习笔记（一）</title>
      <link href="2020/10/22/seaborn-xue-xi-bi-ji-yi/"/>
      <url>2020/10/22/seaborn-xue-xi-bi-ji-yi/</url>
      
        <content type="html"><![CDATA[<h1 id="seaborn功能概述"><a href="#seaborn功能概述" class="headerlink" title="seaborn功能概述"></a>seaborn功能概述</h1><p>seaborn 的功能：</p><ul><li>计算<a href="http://seaborn.pydata.org/examples/faceted_lineplot.html#faceted-lineplot">多变量</a>间<a href="http://seaborn.pydata.org/examples/scatter_bubbles.html#scatter-bubbles">关系</a>的面向数据集接口</li><li>可视化类别变量的<a href="http://seaborn.pydata.org/examples/jitter_stripplot.html#jitter-stripplot">观测</a>与<a href="http://seaborn.pydata.org/examples/pointplot_anova.html#pointplot-anova">统计</a></li><li>可视化<a href="http://seaborn.pydata.org/examples/distplot_options.html#distplot-options">单变量</a>或<a href="http://seaborn.pydata.org/examples/joint_kde.html#joint-kde">多变量</a>分布并与其子数据集<a href="http://seaborn.pydata.org/examples/horizontal_boxplot.html#horizontal-boxplot">比较</a></li><li>控制<a href="http://seaborn.pydata.org/examples/anscombes_quartet.html#anscombes-quartet">线性回归</a>的不同<a href="http://seaborn.pydata.org/examples/logistic_regression.html#logistic-regression">因变量</a>并进行参数估计与作图</li><li>对复杂数据进行易行的整体<a href="http://seaborn.pydata.org/examples/scatterplot_matrix.html#scatterplot-matrix">结构</a>可视化</li><li>对<a href="http://seaborn.pydata.org/examples/faceted_histogram.html#faceted-histogram">多表统计图</a>的制作高度抽象并简化可视化过程</li><li>提供多个内建<a href="http://seaborn.pydata.org/tutorial/aesthetics.html#aesthetics-tutorial">主题</a>渲染 matplotlib 的图像样式</li><li>提供<a href="http://seaborn.pydata.org/tutorial/color_palettes.html#palette-tutorial">调色板</a>工具生动再现数据</li></ul><p>Seaborn 框架旨在以数据可视化为中心来挖掘与理解数据。它提供的面向数据集制图函数主要是对行列索引和数组的操作，包含对整个数据集进行内部的语义映射与统计整合，以此生成富于信息的图表。</p><p>例：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> seaborn <span class="token keyword">as</span> snssns<span class="token punctuation">.</span>set<span class="token punctuation">(</span><span class="token punctuation">)</span>tips <span class="token operator">=</span> sns<span class="token punctuation">.</span>load_dataset<span class="token punctuation">(</span><span class="token string">"tips"</span><span class="token punctuation">)</span>sns<span class="token punctuation">.</span>relplot<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">"total_bill"</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token string">"tip"</span><span class="token punctuation">,</span> col<span class="token operator">=</span><span class="token string">"time"</span><span class="token punctuation">,</span>            hue<span class="token operator">=</span><span class="token string">"smoker"</span><span class="token punctuation">,</span> style<span class="token operator">=</span><span class="token string">"smoker"</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token string">"size"</span><span class="token punctuation">,</span>            data<span class="token operator">=</span>tips<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><img src="https://github.com/man824/blog_source/blob/main/img/seaborn-1.jpg?raw=true"></p><ol><li>装载 seaborn</li></ol><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> seaborn <span class="token keyword">as</span> sns <span class="token comment" spellcheck="true"># 此处，seaborn 实际调用了 matplotlib 作图。</span></code></pre><ol start="2"><li>我们设置并使用 seaborn 默认的主题、尺寸大小以及调色板。</li></ol><pre class=" language-py"><code class="language-py">sns.set()</code></pre><ol start="3"><li>装载数据集</li></ol><pre class=" language-py"><code class="language-py">tips = sns.load_dataset("tips")</code></pre><p>文档中的代码多数会使用 <a href="https://seaborn.apachecn.org/#/generated/seaborn.load_dataset.html?id=seaborn.load_dataset"><code>load_dataset()</code></a> 去取得样例数据集。这些数据集没什么特殊，都是 pandas 的数据结构（dataframes），所以我们也可以使用 <code>pandas.read_csv</code> 或者手动输入创建数据集。<code>tips</code> 数据集提供了一种“整洁”的整合数据的方式，所以如果你使用这种方式来整合自己的数据，使用 seaborn 再好不过了。<a href="https://seaborn.apachecn.org/#/docs/1?id=intro-tidy-data">下面</a>详细解释为什么。</p><ol start="4"><li>我们写一个多子图散点图，分配语义变量</li></ol><pre class=" language-python"><code class="language-python">sns<span class="token punctuation">.</span>relplot<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">"total_bill"</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token string">"tip"</span><span class="token punctuation">,</span> col<span class="token operator">=</span><span class="token string">"time"</span><span class="token punctuation">,</span>            hue<span class="token operator">=</span><span class="token string">"smoker"</span><span class="token punctuation">,</span> style<span class="token operator">=</span><span class="token string">"smoker"</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token string">"size"</span><span class="token punctuation">,</span>            data<span class="token operator">=</span>tips<span class="token punctuation">)</span></code></pre><p>这张图说明了 <code>tips</code> 数据集中五个变量的关系，三个是数值变量，另外两个是类别变量。其中 <code>total_bill</code> 和 <code>tip</code> 这两个数值变量决定了轴上每个点出现的位置，另外一个 <code>size</code> 变量影响着出现点的大小。第一个类别变量 <code>time</code> 将散点图分为两个子图，第二个类别变量 <code>smoker</code> 决定点的形状。</p><p>所有上述内容均由 <a href="https://seaborn.apachecn.org/#/generated/seaborn.relplot.html?id=seaborn.relplot"><code>relplot</code></a> 一次调用生成。注意，在函数调用过程中，我们仅仅使用变量名来划分图像中的不同的语义。如果直接使用 matplotlib ，就必须将变量转换为可视化函数的参数（例如，指定颜色，指定每个类别的制图方式），这在 seaborn 中被自动执行了，以此让使用者将注意力放在他们要解决的问题上。</p><hr><h1 id=""><a href="#" class="headerlink" title=""></a></h1><p>附：<a href="https://seaborn.apachecn.org/#/docs/1">seaborn官方文档（中文）</a></p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> seaborn </tag>
            
            <tag> 绘图 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
